---
apiVersion: v1
kind: Pod
metadata:
  name: grafana
  namespace: prod
  labels:
    app: grafana
    antidote_role: infra
spec:
  nodeSelector:
    monitoringpin: "yes"
  containers:
  - name: grafana
    # http://docs.grafana.org/installation/docker/#migration-from-a-previous-version-of-the-docker-container-to-5-1-or-later
    image: grafana/grafana:5.0.0
    imagePullPolicy: Always
    ports:
    - containerPort: 3000
    env:

    # Grafana is kind of a pain in the ass when you change the root URL. It doesn't work for all paths. So you have to do this and still
    # rewrite to "/" in the ingress.
    - name: GF_SERVER_ROOT_URL
      value: "https://labs.networkreliability.engineering/grafana"
    - name: GF_SECURITY_ADMIN_USER
      value: "mierdin"
    - name: GF_SECURITY_ADMIN_PASSWORD
      value: "nrelabs"
    - name: GF_AUTH_ANONYMOUS_ENABLED
      value: "true"
    - name: GF_AUTH_ANONYMOUS_ORG_ROLE
      value: Viewer
    volumeMounts:
    - name: grafanadata
      mountPath: "/var/lib/grafana"
  # TODO Get https://kubernetes.io/docs/concepts/storage/volumes/#gcepersistentdisk working
  volumes:
    - name: grafanadata
      hostPath:
        path: /grafanadata

---
kind: Service
apiVersion: v1
metadata:
  name: grafana
  namespace: prod
spec:
  selector:
    app: grafana
  ports:
    - name: web
      port: 3000
      targetPort: 3000
  type: ClusterIP

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    # https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/
    ingress.kubernetes.io/ingress.class: "nginx"
    ingress.kubernetes.io/ssl-services: "grafana"
    ingress.kubernetes.io/ssl-redirect: "true"
    ingress.kubernetes.io/force-ssl-redirect: "true"
    ingress.kubernetes.io/rewrite-target: "/"
    nginx.ingress.kubernetes.io/rewrite-target: "/"
    # ingress.kubernetes.io/limit-connections
    # ingress.kubernetes.io/limit-rps
  name: grafana
  namespace: prod
spec:
  tls:
    - hosts:
      - labs.networkreliability.engineering
      secretName: tls-certificate
  rules:
  - host: labs.networkreliability.engineering
    http:
      paths:
      - path: /grafana
        backend:
          serviceName: grafana
          servicePort: 3000

# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: grafana-pv
#   labels:
#     app: grafana
# spec:
#   capacity:
#     storage: 200Gi
#   accessModes:
#     - ReadWriteMany
#   # https://kubernetes.io/docs/concepts/storage/volumes/#gcepersistentdisk
#   gcePersistentDisk:
#     pdName: grafana-disk
#     fsType: ext4

# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: grafana-pvc
#   labels:
#     app: grafana
# spec:
#   accessModes:
#     - ReadWriteMany
#   storageClassName: "" # the storageClassName has to be specified
#   resources:
#     requests:
#       storage: 200Gi
#   selector:
#     matchLabels:
#       app: grafana
